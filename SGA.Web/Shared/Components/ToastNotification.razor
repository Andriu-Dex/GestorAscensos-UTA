@inject IJSRuntime JSRuntime

<!-- Toast Container -->
<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;">
    @if (IsVisible)
    {
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header" style="background-color: @GetHeaderColor();">
                <i class="@GetIcon() me-2"></i>
                <strong class="me-auto text-white">@Title</strong>
                <button type="button" class="btn-close btn-close-white" @onclick="Hide"></button>
            </div>
            <div class="toast-body">
                @Message
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string Message { get; set; } = "";
    [Parameter] public ToastType Type { get; set; } = ToastType.Info;
    [Parameter] public EventCallback OnHide { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (IsVisible)
        {
            // Auto-hide despuÃ©s de 5 segundos
            await Task.Delay(5000);
            await Hide();
        }
    }

    private async Task Hide()
    {
        IsVisible = false;
        await OnHide.InvokeAsync();
        StateHasChanged();
    }

    private string GetHeaderColor()
    {
        return Type switch
        {
            ToastType.Success => "#198754",
            ToastType.Error => "#dc3545",
            ToastType.Warning => "#fd7e14",
            ToastType.Info => "#0d6efd",
            _ => "#6c757d"
        };
    }

    private string GetIcon()
    {
        return Type switch
        {
            ToastType.Success => "bi bi-check-circle-fill text-white",
            ToastType.Error => "bi bi-x-circle-fill text-white",
            ToastType.Warning => "bi bi-exclamation-triangle-fill text-white",
            ToastType.Info => "bi bi-info-circle-fill text-white",
            _ => "bi bi-bell-fill text-white"
        };
    }

    public enum ToastType
    {
        Success,
        Error,
        Warning,
        Info
    }
}
