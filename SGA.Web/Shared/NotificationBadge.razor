@* Componente para mostrar un badge animado del contador de notificaciones *@
@inject IJSRuntime JSRuntime

<div class="notification-counter-badge @(_count > 0 ? "has-notifications" : "")">
    @if (_count > 0)
    {
        <span class="counter-number @(_isAnimating ? "animate-bounce" : "")">
            @(_count > 99 ? "99+" : _count.ToString())
        </span>
        @if (_showPulse)
        {
            <span class="pulse-ring"></span>
        }
    }
</div>

@code {
    [Parameter] public int Count { get; set; }
    [Parameter] public bool ShowPulse { get; set; } = true;
    [Parameter] public EventCallback<int> CountChanged { get; set; }

    private int _count;
    private bool _isAnimating;
    private bool _showPulse = true;

    protected override async Task OnParametersSetAsync()
    {
        if (Count != _count)
        {
            var oldCount = _count;
            _count = Count;
            
            // Animar solo si el contador aumentÃ³
            if (Count > oldCount && Count > 0)
            {
                _isAnimating = true;
                StateHasChanged();
                
                await Task.Delay(600);
                _isAnimating = false;
                StateHasChanged();
            }
        }
    }

    public async Task AnimateNewNotification()
    {
        _isAnimating = true;
        StateHasChanged();
        
        await Task.Delay(600);
        _isAnimating = false;
        StateHasChanged();
    }
}
