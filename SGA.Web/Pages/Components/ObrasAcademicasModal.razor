@using SGA.Web.Models
@using Microsoft.AspNetCore.Components.Forms
@inject IToastService ToastService

@if (IsVisible)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Agregar Obras Académicas</h5>
                    <button type="button" class="btn-close" @onclick="OnClose"></button>
                </div>
                <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
                    @for (int i = 0; i < nuevasObras.Count; i++)
                    {
                        var index = i; // Capturar índice para uso en lambda
                        <div class="card mb-3">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Obra #@(index + 1)</h6>
                                @if (nuevasObras.Count > 1)
                                {
                                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="() => RemoverObra(index)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">Título *</label>
                                            <input type="text" class="form-control" @bind="nuevasObras[index].Titulo" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">Tipo de Obra *</label>
                                            <select class="form-select" @bind="nuevasObras[index].TipoObra">
                                                <option value="">Seleccione...</option>
                                                <option value="Libro">Libro</option>
                                                <option value="Artículo de Revista">Artículo de Revista</option>
                                                <option value="Capítulo de Libro">Capítulo de Libro</option>
                                                <option value="Ponencia">Ponencia</option>
                                                <option value="Tesis">Tesis</option>
                                                <option value="Otro">Otro</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label class="form-label">Fecha de Publicación *</label>
                                            <input type="date" class="form-control" @bind="nuevasObras[index].FechaPublicacion" />
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label class="form-label">Editorial</label>
                                            <input type="text" class="form-control" @bind="nuevasObras[index].Editorial" />
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="mb-3">
                                            <label class="form-label">Revista</label>
                                            <input type="text" class="form-control" @bind="nuevasObras[index].Revista" />
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">ISBN/ISSN</label>
                                            <input type="text" class="form-control" @bind="nuevasObras[index].ISBN_ISSN" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label">DOI</label>
                                            <input type="text" class="form-control" @bind="nuevasObras[index].DOI" />
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-check mb-3">
                                            <input class="form-check-input" type="checkbox" @bind="nuevasObras[index].EsIndexada" />
                                            <label class="form-check-label">¿Es indexada?</label>
                                        </div>
                                    </div>
                                    @if (nuevasObras[index].EsIndexada)
                                    {
                                        <div class="col-md-8">
                                            <div class="mb-3">
                                                <label class="form-label">Índice de Indexación</label>
                                                <input type="text" class="form-control" @bind="nuevasObras[index].IndiceIndexacion" placeholder="ej: Scopus, WoS, Latindex" />
                                            </div>
                                        </div>
                                    }
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Autores</label>
                                    <textarea class="form-control" @bind="nuevasObras[index].Autores" rows="2" placeholder="Separar autores con comas"></textarea>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Descripción</label>
                                    <textarea class="form-control" @bind="nuevasObras[index].Descripcion" rows="3"></textarea>
                                </div>
                                
                                <div class="mb-3">
                                    <label class="form-label">Archivo PDF (opcional)</label>
                                    <InputFile OnChange="@(e => OnObraFileChange(e, index))" class="form-control" accept=".pdf" />
                                    @if (!string.IsNullOrEmpty(nuevasObras[index].ArchivoNombre))
                                    {
                                        <small class="text-success">Archivo: @nuevasObras[index].ArchivoNombre</small>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    
                    <button type="button" class="btn btn-outline-primary" @onclick="AgregarOtraObra">
                        <i class="bi bi-plus-circle"></i> Agregar otra obra
                    </button>
                    
                    <div class="mt-3">
                        <label class="form-label">Comentarios adicionales</label>
                        <textarea class="form-control" @bind="comentariosSolicitud" rows="3" placeholder="Comentarios opcionales para la solicitud"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="OnClose" disabled="@IsEnviando">Cancelar</button>
                    <button type="button" class="btn btn-success" @onclick="EnviarSolicitud" disabled="@(!PuedeEnviarSolicitud() || IsEnviando)">
                        @if (IsEnviando)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        }
                        Enviar Solicitud
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public bool IsEnviando { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnEnviarSolicitud { get; set; }
    
    private List<NuevaObraAcademicaDto> nuevasObras = new();
    private string comentariosSolicitud = string.Empty;

    protected override void OnParametersSet()
    {
        if (IsVisible && !nuevasObras.Any())
        {
            nuevasObras = new List<NuevaObraAcademicaDto> { new NuevaObraAcademicaDto() };
            comentariosSolicitud = string.Empty;
        }
        else if (!IsVisible)
        {
            nuevasObras.Clear();
            comentariosSolicitud = string.Empty;
        }
    }

    private void AgregarOtraObra()
    {
        nuevasObras.Add(new NuevaObraAcademicaDto());
    }

    private void RemoverObra(int index)
    {
        if (nuevasObras.Count > 1)
        {
            nuevasObras.RemoveAt(index);
        }
    }

    private async Task OnObraFileChange(InputFileChangeEventArgs e, int index)
    {
        var file = e.File;
        if (file != null && file.Size <= 10 * 1024 * 1024) // 10MB max
        {
            using var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024);
            using var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);
            var bytes = memoryStream.ToArray();
            var base64 = Convert.ToBase64String(bytes);
            
            nuevasObras[index].ArchivoNombre = file.Name;
            nuevasObras[index].ArchivoContenido = base64;
            nuevasObras[index].ArchivoTipo = file.ContentType;
        }
        else if (file != null)
        {
            ToastService.ShowError("El archivo excede el tamaño máximo permitido de 10MB");
        }
    }

    private bool PuedeEnviarSolicitud()
    {
        return nuevasObras.Any() && nuevasObras.All(o => 
            !string.IsNullOrWhiteSpace(o.Titulo) && 
            !string.IsNullOrWhiteSpace(o.TipoObra) && 
            o.FechaPublicacion != default);
    }

    private async Task EnviarSolicitud()
    {
        if (PuedeEnviarSolicitud())
        {
            await OnEnviarSolicitud.InvokeAsync();
        }
    }

    public List<NuevaObraAcademicaDto> GetNuevasObras() => nuevasObras;
    public string GetComentarios() => comentariosSolicitud;
}
