@using SGA.Web.Models
@using SGA.Web.Shared
@using Microsoft.JSInterop
@using Blazored.Toast.Services
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject IJSRuntime JSRuntime

<div class="card">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Documentos</h5>
        <button class="btn btn-light" @onclick="ShowUploadModal">
            <i class="bi bi-plus-circle"></i> Subir Documento
        </button>
    </div>
    <div class="card-body">
        @if (isLoading)
        {
            <div class="d-flex justify-content-center my-3">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando documentos...</span>
                </div>
            </div>
        }
        else if (documentos == null || !documentos.Any())
        {
            <div class="alert alert-info" role="alert">
                No tiene documentos cargados. Utilice el botón "Subir Documento" para agregar nuevos documentos.
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Tipo</th>
                            <th>Descripción</th>
                            <th>Fecha</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var documento in documentos)
                        {
                            <tr>
                                <td>@documento.Nombre</td>
                                <td>@documento.TipoDocumento</td>
                                <td>@(documento.Descripcion ?? "Sin descripción")</td>
                                <td>
                                    <EcuadorDateDisplay Date="documento.FechaCreacion" 
                                                       Format="date" 
                                                       CssClass="text-muted" />
                                </td>
                                <td>
                                    @if (documento.Verificado)
                                    {
                                        <span class="badge bg-success">Verificado</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning text-dark">Pendiente</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button class="btn btn-sm btn-outline-primary" 
                                                @onclick="() => ViewDocument(documento)"
                                                title="Ver">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-success" 
                                                @onclick="() => DownloadDocument(documento)"
                                                title="Descargar">
                                            <i class="bi bi-download"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" 
                                                @onclick="() => DeleteDocument(documento.Id)"
                                                title="Eliminar">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public List<DocumentoDto>? documentos { get; set; }
    [Parameter] public bool isLoading { get; set; }
    [Parameter] public EventCallback OnShowUploadModal { get; set; }
    [Parameter] public EventCallback<DocumentoDto> OnViewDocument { get; set; }
    [Parameter] public EventCallback<DocumentoDto> OnDownloadDocument { get; set; }
    [Parameter] public EventCallback<Guid> OnDeleteDocument { get; set; }

    private void ShowUploadModal()
    {
        OnShowUploadModal.InvokeAsync();
    }

    private void ViewDocument(DocumentoDto documento)
    {
        OnViewDocument.InvokeAsync(documento);
    }

    private void DownloadDocument(DocumentoDto documento)
    {
        OnDownloadDocument.InvokeAsync(documento);
    }

    private void DeleteDocument(Guid id)
    {
        OnDeleteDocument.InvokeAsync(id);
    }
}
